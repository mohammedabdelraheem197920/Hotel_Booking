// <auto-generated />
using System;
using Infrastructuer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructuer.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    partial class HotelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("DiscountApplied")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Core.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelID");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "City1",
                            Country = "Country1",
                            HotelID = 1,
                            PostalCode = "12345",
                            State = "State1",
                            Street = "Street1"
                        },
                        new
                        {
                            Id = 2,
                            City = "City2",
                            Country = "Country1",
                            HotelID = 1,
                            PostalCode = "12346",
                            State = "State1",
                            Street = "Street2"
                        },
                        new
                        {
                            Id = 3,
                            City = "City3",
                            Country = "Country1",
                            HotelID = 1,
                            PostalCode = "12347",
                            State = "State1",
                            Street = "Street3"
                        },
                        new
                        {
                            Id = 4,
                            City = "City1",
                            Country = "Country2",
                            HotelID = 2,
                            PostalCode = "22345",
                            State = "State2",
                            Street = "Street4"
                        },
                        new
                        {
                            Id = 5,
                            City = "City2",
                            Country = "Country2",
                            HotelID = 2,
                            PostalCode = "22346",
                            State = "State2",
                            Street = "Street5"
                        },
                        new
                        {
                            Id = 6,
                            City = "City3",
                            Country = "Country2",
                            HotelID = 2,
                            PostalCode = "22347",
                            State = "State2",
                            Street = "Street6"
                        },
                        new
                        {
                            Id = 7,
                            City = "City1",
                            Country = "Country3",
                            HotelID = 3,
                            PostalCode = "32345",
                            State = "State3",
                            Street = "Street7"
                        },
                        new
                        {
                            Id = 8,
                            City = "City2",
                            Country = "Country3",
                            HotelID = 3,
                            PostalCode = "32346",
                            State = "State3",
                            Street = "Street8"
                        },
                        new
                        {
                            Id = 9,
                            City = "City3",
                            Country = "Country3",
                            HotelID = 3,
                            PostalCode = "32347",
                            State = "State3",
                            Street = "Street9"
                        },
                        new
                        {
                            Id = 10,
                            City = "City1",
                            Country = "Country4",
                            HotelID = 4,
                            PostalCode = "42345",
                            State = "State4",
                            Street = "Street10"
                        },
                        new
                        {
                            Id = 11,
                            City = "City2",
                            Country = "Country4",
                            HotelID = 4,
                            PostalCode = "42346",
                            State = "State4",
                            Street = "Street11"
                        },
                        new
                        {
                            Id = 12,
                            City = "City3",
                            Country = "Country4",
                            HotelID = 4,
                            PostalCode = "42347",
                            State = "State4",
                            Street = "Street12"
                        },
                        new
                        {
                            Id = 13,
                            City = "City1",
                            Country = "Country5",
                            HotelID = 5,
                            PostalCode = "52345",
                            State = "State5",
                            Street = "Street13"
                        },
                        new
                        {
                            Id = 14,
                            City = "City2",
                            Country = "Country5",
                            HotelID = 5,
                            PostalCode = "52346",
                            State = "State5",
                            Street = "Street14"
                        },
                        new
                        {
                            Id = 15,
                            City = "City3",
                            Country = "Country5",
                            HotelID = 5,
                            PostalCode = "52347",
                            State = "State5",
                            Street = "Street15"
                        });
                });

            modelBuilder.Entity("Core.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Hotel A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hotel B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hotel C"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Hotel D"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Hotel E"
                        });
                });

            modelBuilder.Entity("Core.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchID")
                        .HasColumnType("int");

                    b.Property<bool>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfAdults")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfChildren")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("BranchID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BranchID = 1,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            BranchID = 1,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 21,
                            BranchID = 1,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 22,
                            BranchID = 1,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 23,
                            BranchID = 1,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            BranchID = 2,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            BranchID = 2,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 24,
                            BranchID = 2,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 25,
                            BranchID = 2,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 26,
                            BranchID = 2,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 5,
                            BranchID = 3,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 6,
                            BranchID = 3,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 27,
                            BranchID = 3,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 75,
                            BranchID = 3,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 28,
                            BranchID = 3,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 7,
                            BranchID = 4,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 29,
                            BranchID = 4,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 8,
                            BranchID = 4,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 30,
                            BranchID = 4,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 31,
                            BranchID = 4,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 9,
                            BranchID = 5,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 10,
                            BranchID = 5,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 32,
                            BranchID = 5,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 33,
                            BranchID = 5,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 34,
                            BranchID = 5,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 11,
                            BranchID = 6,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 12,
                            BranchID = 6,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 35,
                            BranchID = 6,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 36,
                            BranchID = 6,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 37,
                            BranchID = 6,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 13,
                            BranchID = 7,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 14,
                            BranchID = 7,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 38,
                            BranchID = 7,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 39,
                            BranchID = 7,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 40,
                            BranchID = 7,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 15,
                            BranchID = 8,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 16,
                            BranchID = 8,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 41,
                            BranchID = 8,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 42,
                            BranchID = 8,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 43,
                            BranchID = 8,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 17,
                            BranchID = 9,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 18,
                            BranchID = 9,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 44,
                            BranchID = 9,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 45,
                            BranchID = 9,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 46,
                            BranchID = 9,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 19,
                            BranchID = 10,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 20,
                            BranchID = 10,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 47,
                            BranchID = 10,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 48,
                            BranchID = 10,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 49,
                            BranchID = 10,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 50,
                            BranchID = 11,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 51,
                            BranchID = 11,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 52,
                            BranchID = 11,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 53,
                            BranchID = 11,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 54,
                            BranchID = 11,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 55,
                            BranchID = 12,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 56,
                            BranchID = 12,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 57,
                            BranchID = 12,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 58,
                            BranchID = 12,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 59,
                            BranchID = 12,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 60,
                            BranchID = 13,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 61,
                            BranchID = 13,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 62,
                            BranchID = 13,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 63,
                            BranchID = 13,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 64,
                            BranchID = 13,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 65,
                            BranchID = 14,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 66,
                            BranchID = 14,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 67,
                            BranchID = 14,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 68,
                            BranchID = 14,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 69,
                            BranchID = 14,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 70,
                            BranchID = 15,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 71,
                            BranchID = 15,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 72,
                            BranchID = 15,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 73,
                            BranchID = 15,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 74,
                            BranchID = 15,
                            IsBooked = false,
                            NumberOfAdults = 0,
                            NumberOfChildren = 0,
                            Type = 0
                        });
                });

            modelBuilder.Entity("Core.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("AgeCategory")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("isOldClient")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Core.Models.Booking", b =>
                {
                    b.HasOne("Core.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Models.Branch", b =>
                {
                    b.HasOne("Core.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Core.Models.Room", b =>
                {
                    b.HasOne("Core.Models.Booking", "Booking")
                        .WithMany("Rooms")
                        .HasForeignKey("BookingId");

                    b.HasOne("Core.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchID");

                    b.Navigation("Booking");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Core.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Core.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Core.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Models.Booking", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
